@model LoginModel

@{
    ViewBag.Title = "Login";
}
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration

<h2>Login</h2>
<script type="text/javascript">
    document.addEventListener("DOMContentLoaded", function () {
        grecaptcha.render('captcha-element', {
            'sitekey': 'yoursite6LfoYy0qAAAAAMTuv1LbxvP9XnQQpJOF4T9WUtH2key'
        });
    });
    </script>
@using (Html.BeginForm())
{   <form asp-action="Login" method="post">
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Use a local account to log in.</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <br/>
            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
            </div>
            <br/>
            <div class="g-recaptcha" data-sitekey="@Configuration["ReCaptchaSetting:SiteKey"]"></div>
            <br />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Login" class="btn btn-default" />
                </div>
            </div>
        </div>
    </form>
}
<script src="https://www.google.com/recaptcha/api.js" async defer></script>

<script src="https://www.google.com/recaptcha/api.js?onload=onloadCallback&render=explicit"
        async defer>
</script>
